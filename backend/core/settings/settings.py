"""
Django settings for core project.
Generated by 'django-admin startproject' using Django 4.0.4.
"""

from pathlib import Path
import os

from dotenv import load_dotenv

from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent
# load dotenv file relatively to basedir path 
load_dotenv(dotenv_path=os.path.join(BASE_DIR, "core/settings", ".env"))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

SCHEME = "http"
DOMAIN = "localhost:3000"

ALLOWED_HOSTS = [
    "localhost",
    '127.0.0.1',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

CORS_ALLOW_CREDENTIALS = True

SESSION_COOKIE_SECURE = False

# installed apps
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # third-party
    'rest_framework_simplejwt',
    'rest_framework',
    'corsheaders',
    'django_rest_passwordreset',
    
    # myApps
    'application.apps.MainConfig',
    'authentication.apps.CustomAuthenticationConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    # Third-party Middlewares
    "corsheaders.middleware.CorsMiddleware",

    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv("DB_NAME"),
        'USER': os.getenv("DB_USER"),
        'PASSWORD': os.getenv("DB_PASSWORD"),
        'HOST': os.getenv("DB_HOST"),
        'PORT': os.getenv("DB_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    # default
    'EXCEPTION_HANDLER': 'core.utils.exception_handlers.drf_exception_handler',
    # custom
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'authentication.authenticate.CustomAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
    ),
}


# JWT cookies setting
SIMPLE_JWT = {
    'AUTH_HEADER_TYPES': ('JWT',),
    'AUTH_COOKIE': 'access',
    'REFRESH_COOKIE': 'refresh',
    'AUTH_COOKIE_DOMAIN': None,

    # cross-origin cookies settings
    'AUTH_COOKIE_SECURE': True,
    'AUTH_COOKIE_HTTP_ONLY': True,

    'AUTH_COOKIE_PATH': '/',
    'ACCESS_TOKEN_LIFETIME': timedelta(weeks=4, days=3),
    'ROTATE_REFRESH_TOKENS': True,
}

SIMPLE_JWT_COOKIE_PROPERTIES = {
    "samesite": "None",
    "secure": True,
    "expires": SIMPLE_JWT["ACCESS_TOKEN_LIFETIME"],
    "httponly": SIMPLE_JWT["AUTH_COOKIE_HTTP_ONLY"],
    "path": SIMPLE_JWT["AUTH_COOKIE_PATH"],
    # "domain": "localhost"
}

AUTH_USER_MODEL = 'authentication.UserModified'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.AllowAllUsersModelBackend',
    'application.backends.CaseInsensitiveModelBackend'
)

DEFAULT_FROM_EMAIL = os.getenv("EMAIL_HOST_USER")
SERVER_EMAIL = os.getenv("EMAIL_HOST_USER")
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("email_host_password")


"""csrf related 
deprecated"""
# CSRF_TRUSTED_ORIGINS = [
#     'http://127.0.0.1:3000',
#     'http://localhost:3000',
#     'http://localhost:8000',
# ]

# CSRF_COOKIE_SAMESITE = 'lax'
# CSRF_COOKIE_DOMAIN = None

# CSRF_COOKIE_HTTPONLY = True
# CSRF_COOKIE_SECURE = True
